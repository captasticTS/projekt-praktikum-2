@page "/"
@using ArrowLog.Features.Login
@using MudBlazor
@inject NavigationManager NavigationManager
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-5">
    <!-- Welcome Message -->
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-3">Welcome to ArrowLog!</MudText>

    <!-- Login Form -->
    <MudForm>
        <MudGrid Spacing="3">
            <!-- Username Input -->
            <MudItem xs="12">
                <MudTextField Label="Nickname" @bind-Value="Username" Variant=Variant.Outlined FullWidth />
            </MudItem>

            <!-- Password Input -->
            <MudItem xs="12">
                <MudTextField @bind-Value="Password"
                              Label="Password"
                              Variant="Variant.Outlined"
                              InputType="@PasswordInput"
                              Adornment="Adornment.End"
                              AdornmentIcon="@PasswordInputIcon"
                              OnAdornmentClick="TogglePasswordVisibility"
                              AdornmentAriaLabel="Show Password"
                              FullWidth />
            </MudItem>
        </MudGrid>

        <!-- Sign In Button -->
        <MudGrid Spacing="3" Class="mt-4">
            <MudItem xs="12" Class="d-flex justify-center">
                <MudButton Variant=Variant.Filled Color=Color.Primary OnClick="SignIn">Sign in</MudButton>
            </MudItem>
        </MudGrid>
    </MudForm>

    <!-- Error Message -->
    @if (@loginFailed){
        <p style="color: red;">@errorMessage</p>
    }

    <!-- Divider with "or" -->
    <MudGrid Spacing="3" Class="mt-3">
        <MudItem xs="5" Class="d-flex align-center">
            <MudDivider />
        </MudItem>
        <MudItem xs="2" Class="d-flex justify-center align-center">
            <MudText Typo="Typo.body2">or</MudText>
        </MudItem>
        <MudItem xs="5" Class="d-flex align-center">
            <MudDivider />
        </MudItem>
    </MudGrid>

    <!-- Register Button -->
    <MudGrid Spacing="3" Class="mt-4">
        <MudItem xs="12" Class="d-flex justify-center">
            <MudButton Variant=Variant.Outlined Color=Color.Secondary OnClick="GoToRegister">Register</MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private bool loginFailed = false;
    private string errorMessage = string.Empty;

    private string LoggedInUser => HttpContextAccessor.HttpContext?.Session.GetString("LoggedInUser");
    private bool IsUserLoggedIn => !string.IsNullOrEmpty(LoggedInUser);

    private bool IsPasswordVisible { get; set; }
    private InputType PasswordInput { get; set; } = InputType.Password;
    private string PasswordInputIcon { get; set; } = Icons.Material.Filled.VisibilityOff;

    private void TogglePasswordVisibility()
    {
        if (IsPasswordVisible)
        {
            IsPasswordVisible = false;
            PasswordInput = InputType.Password;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
        }
        else
        {
            IsPasswordVisible = true;
            PasswordInput = InputType.Text;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
        }
    }

    protected override void OnInitialized()
    {
        if (IsUserLoggedIn)
        {
            NavigationManager.NavigateTo("/home");
        }
    }

    private void SignIn()
    {
        try
        {
            var person = AuthService.ValidateUser(Username, Password);

            if (person != null)
            {
                errorMessage = "Login successful!";
                var context = HttpContextAccessor.HttpContext;

                if (context != null)
                {
                    context.Session.SetString("LoggedInUser", person.NickName);
                    NavigationManager.NavigateTo("/home");
                }
                else
                {
                    loginFailed = true;
                    errorMessage = "Session context is null. Ensure session middleware is active.";
                }
            }
            else
            {
                loginFailed = true;
                errorMessage = "Invalid username or password.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void GoToRegister()
    {
        // Navigate to the Register Page
        NavigationManager.NavigateTo("/register");
    }
}