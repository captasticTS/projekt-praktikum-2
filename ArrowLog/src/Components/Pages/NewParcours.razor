@page "/new-parcours"
@inject NavigationManager NavigationManager
@using MudBlazor
@using static MudBlazor.Icons.Material
@using Database.Services
@using Database.Models
@inject DbParcoursService parcoursService
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Medium" Class="mt-5">
    <!-- Section Title -->
    <MudText Typo="Typo.h5" Align="Align.Center" Class="mb-3">New Parcours</MudText>

    @(allParcours?.Count ?? -1)

    <MudForm>
        <MudGrid Spacing="3">
            <!-- Name Input -->
            <MudItem xs="12">
                <MudTextField Label="Name" @bind-Value="ParcoursName" Variant=Variant.Outlined FullWidth />
            </MudItem>

            <!-- Location Input -->
            <MudItem xs="12">
                <MudTextField Label="Location" @bind-Value="ParcoursLocation" Variant=Variant.Outlined FullWidth />
            </MudItem>

            <!-- Targets Selector -->
            <MudItem xs="12">
                <MudSelect T="int" Label="Targets" Variant=Variant.Outlined FullWidth @bind-Value="Targets">
                    @for (int i = 1; i <= 20; i++)
                    {
                        var tempI = i;
                        <MudSelectItem Value="@tempI">@tempI</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
        </MudGrid>

        <!-- Create Button -->
        <MudGrid Spacing="3" Class="mt-4">
            <MudItem xs="12" Class="d-flex justify-center">
                <MudButton Variant=Variant.Filled Color=Color.Primary OnClick="CreateParcours">CREATE</MudButton>
            </MudItem>
        </MudGrid>
    </MudForm>

    @if (wasSuccesful)
    {
        <p style="color: green">created succesfully</p>
    }

</MudContainer>

@code {
    private string ParcoursName = string.Empty;
    private string ParcoursLocation = string.Empty;
    private int Targets = 9; // Default value
    private bool wasSuccesful = false;
    private List<Parcours>? allParcours = new();
    private string message = "not yet initialized";

    protected override async Task OnInitializedAsync()
    {
        allParcours = await parcoursService.FindParcoursByName("Bester Parcours");

        if (allParcours is null)
        {
            message = "nothing was found";
        }
        else
        {
            message = $"entries: {allParcours.Count}";
        }
    }

    private async void CreateParcours()
    {
        Parcours? parcours = new();

        parcours.Name = ParcoursName;
        parcours.Location = ParcoursLocation;
        parcours.AnimalCount = Targets;

        parcours = await parcoursService.CreateParcours(parcours);

        if (parcours is not null)
        {
            wasSuccesful = true;
            Snackbar.Add("nice", Severity.Success);
        }
    }
}
